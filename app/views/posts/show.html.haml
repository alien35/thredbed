
%br

.comment_format
  %ul.post_info
    %span Reference:
    = link_to @post.link, @post.link
  - begin
    - if @post.user.id == current_user.id
      = link_to '', edit_post_path(@post), class: "glyphicon glyphicon-wrench"
      = link_to '', post_path(@post), method: :delete, data: { confirm: "Are you sure?" }, class: "glyphicon glyphicon-trash"
    %br
  - rescue NoMethodError
  - if user_signed_in?
    = link_to index_profile_avatar_select(@post.user), profile_path(@post.user.user_name)
    %span.poster_name
      #{link_to @post.user.user_name, profile_path(@post.user.user_name)}, #{@post.user.bio}
    = render 'profiles/post_follow_form'
  - else
    %br
    = index_profile_avatar_select(@post.user)
    %li.signed_out_names
      #{@post.user.user_name}, #{@post.user.bio}
  .small_font posted this #{time_ago_in_words @post.created_at} ago


  %h1.post_title= @post.title
  %li= @post.commentary
  %span= render 'posts/likes'

%br

.comment_format
  .comments{id: "comments_#{@post.id}"}
    - if @post.comments.any?
      -if user_signed_in?
        %p
          %strong
            -if @post.comments.of_followed_users(current_user.following).count > 0
              %ul.dropdown-menu#account_dropdown
              %span.dropdown
                %button.btn.btn-default.dropdown-toggle#comment_dropdown{"data-toggle" => "dropdown", :type => "button"}
                  Comments by people you're following:
                  %span.caret
                %ul.dropdown-menu#account_dropdown
                  .container#comment_dropdown
                    - @post.comments.of_followed_users(current_user.following).each do |comment|
                      = render 'comments/followed_users', comment: comment
        %p
          %strong
            -if @post.comments.of_followed_users(current_user.following).count > 0
              All comments:
        = render @post.comments, post: @post
      -else
        = render @post.comments.order(cached_votes_score: :desc), post: @post
- if user_signed_in?
  .comment_format
    = simple_form_for([@post, @post.comments.build], remote: true)  do |f|
      = f.input :content, label:'Add your commentary:'
      = f.submit "Submit", class: "btn btn-default"
