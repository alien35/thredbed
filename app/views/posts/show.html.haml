
%br
%ul.post_info
  %span Check out the reference:
  = link_to @post.link, @post.link
.comment_format
  - begin
    - if @post.user.id == current_user.id
      = link_to 'Edit', edit_post_path(@post)
      = link_to 'Delete', post_path(@post), method: :delete, data: { confirm: "Are you sure?" }
      %br
  - rescue NoMethodError
  - if user_signed_in?
    = link_to index_profile_avatar_select(@post.user), profile_path(@post.user.user_name)
    = link_to user_bio(@post.user), profile_path(@post.user.user_name)
    = render 'profiles/post_follow_form'

  - else
    = index_profile_avatar_select(@post.user)
    %li.signed_out_names=user_bio(@post.user)
  .small_font posted this #{time_ago_in_words @post.created_at} ago

  %h1.post_title= @post.title
  %li= @post.commentary
  %span.voter_names= render 'posts/likes'
  %span.voter_names= render 'posts/dislikes'

  - if user_signed_in?
    .comment-like-form.row.post_vote_machine
      =link_to upvote_post_path(@post), method: :put do
        %span.glyphicon.glyphicon-thumbs-up
      =link_to unvote_post_path(@post), method: :put do
        %span.glyphicon.glyphicon-adjust
      =link_to downvote_post_path(@post), method: :put do
        %span.glyphicon.glyphicon-thumbs-down
.comment_format
  .comments{id: "comments_#{@post.id}"}
    - if @post.comments.any?
      -if user_signed_in?
        %p
          %strong
            -if @post.comments.of_followed_users(current_user.following).count > 0
              %ul.dropdown-menu#account_dropdown
              %span.dropdown
                %button.btn.btn-danger.dropdown-toggle#comment_dropdown{"data-toggle" => "dropdown", :type => "button"}
                  Comments by people you're following:
                  %span.caret
                %ul.dropdown-menu#account_dropdown
                  = render @post.comments.of_followed_users(current_user.following)
        %p
          %strong
            -if @post.comments.of_followed_users(current_user.following).count > 0
              All comments:
        = render @post.comments.order(cached_votes_score: :desc), post: @post
      -else
        = render @post.comments.order(cached_votes_score: :desc), post: @post
- if user_signed_in?
  .comment_format
    = simple_form_for([@post, @post.comments.build], remote: true)  do |f|
      = f.input :content, label:'Add your commentary:'
      = f.submit class: "btn btn-primary"
