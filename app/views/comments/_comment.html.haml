%strong
  - if user_signed_in?
    =link_to show_profile_avatar_select(comment.user), profile_path(comment.user.user_name)
  -else
    =show_profile_avatar_select(comment.user)
.comment_format
  -if user_signed_in?
    .commenter_name= link_to comment.user.user_name, profile_path(comment.user.user_name)
  -else
    = comment.user.user_name
  = comment.content
  - if comment.user == current_user
    = link_to post_comment_path(post, comment), method: :delete, data: { confirm: "Are you sure?"}, remote: true, id: "delete-#{comment.id}" do
      .glyphicon.glyphicon-remove
  .time_ago= time_ago_in_words comment.created_at
  %span.voter_names= render 'comments/likes', comment: comment
  %span.voter_names= render 'comments/dislikes', comment: comment
  - if user_signed_in? && comment.user != current_user
    =link_to upvote_post_comment_path(@post, comment), method: :put do
      %span.glyphicon.glyphicon-chevron-up
    =link_to unvote_post_comment_path(@post, comment), method: :put do
      %span.glyphicon.glyphicon-adjust
    =link_to downvote_post_comment_path(@post, comment), method: :put do
      %span.glyphicon.glyphicon-chevron-down
  = render comment.responses, comment: comment
  - if user_signed_in?
    .reply_block{id: "reply_block_#{comment.id}"}
      %button.reply_button reply
      %span= render 'comments/follow_form', comment: comment
      .responses{id: "responses_#{comment.id}"}
      .response_form_hide
        = simple_form_for([comment, comment.responses.build])  do |f|
          = f.input :content, label: false
          = f.submit class: "btn btn-primary"



%br





