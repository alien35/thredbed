.first_comment_format
  %strong
    - if user_signed_in?
      =link_to comment_profile_avatar_select(comment.user), profile_path(comment.user.user_name)
    -else
      =comment_profile_avatar_select(comment.user)
  -if user_signed_in?
    .commenter_name= link_to comment.user.user_name, profile_path(comment.user.user_name)
  -else
    = comment.user.user_name
  = comment.content
  - if comment.user == current_user
    = link_to post_comment_path(post, comment), method: :delete, data: { confirm: "Are you sure?"}, remote: true, id: "delete-#{comment.id}" do
      .glyphicon.glyphicon-remove
  .time_ago= time_ago_in_words comment.created_at
  %span.voter_names= render 'comments/likes', comment: comment
  %span.voter_names= render 'comments/dislikes', comment: comment
  - if user_signed_in? && comment.user != current_user
    =link_to upvote_post_comment_path(@post, comment), method: :put do
      %span.glyphicon.glyphicon-thumbs-up
    =link_to unvote_post_comment_path(@post, comment), method: :put do
      %span.glyphicon.glyphicon-adjust
    =link_to downvote_post_comment_path(@post, comment), method: :put do
      %span.glyphicon.glyphicon-thumbs-down
    %span= render 'comments/follow_form', comment: comment
  -if comment.responses.any?
    .container.reply_container
      = render comment.responses, comment: comment
  -if user_signed_in?
    = render 'responses/form', comment: comment
-if !user_signed_in? && comment.responses.count > 0
  .signed_out_reply_line
-unless comment.responses.count > 0
  %br

